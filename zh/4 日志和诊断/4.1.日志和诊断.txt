终于，我们完成了 CRUD
是的，我们做到了
创建，读取，更新，删除
接下来，我们将来添加日志功能，并在本地执行 Application Insights ，然后在记录日志的过程中，我还想添加一个名为 Temp Data 的小东西
因为我注意到，若在我们进行创建的时候，能有一条消息表示正在创建或者其他提示，这样会更友好
嗯嗯，听起来不错
但这并不是模型的一部分，因此这会带来一些有趣的问题
例如，如果我们回到 Create 页面，对此我们都还有印象，是吧
我们输入名称，然后点击提交，在让我们看下相关的页面模型，一目了然，对吧
我们有使用了 BindProperty 属性的用户，就像你说的在
幸存的旅程
幸存下来的旅程，但我们希望有一些像临时数据之类的消息提示，用户添加成功
是啊
所以我们可以添加一个字符串变量叫做 message
这很有趣，因为它是页面模型的一部分，但不是数据库的一部分
是的
这是页面模型的一部分，它有点像视图模型
这实际上是一段临时的数据
这就是 Tempdata ，他们将在这储存相应的值，然后可以在另一个页面中访问
所以这就像是一个车斗，或者说是便利贴
这种思考问题的角度很不错。是的
很好，这就是一个放东西的地方
首先，我要保存数据库，就像我们之前那样保存数据，然后
你会收到一条消息
我将收到一些消息并提示，嘿，`Customer` ，在这里你可以自定义一些东西
比如说 `{Customer.Name}`
`added`
这是一条消息，对吗？
它可以来自你想要的任何东西
它可以是生成的，而在这里我们将拼接文本与来自表单的数据
然后回过头我们再来看下这个消息，该消息并不是数据库的一部分
所以，在这个简单的实例中，你使用的是 TempData ，而不必访问数据库
是的，因为我提交了表单，而实际上我从来没有把它存到数据库的任何地方
如果我没有在上面添加 TempData ，那它永远都不会保存下来，也不会
好的
但是因为它是在页面模型上的 public 属性，所以我可以在其他地方使用它，对吗？
让我们回过头来，想一想
是该到你的索引页面了吧？
是的，谢谢
我花了一秒钟让我的头脑清醒了一下
所以在索引页面上，我们也会添加一条消息
那会获得那些临时数据吧？
是的
然后在这里，也许我们需要一些，就把它放在表格的顶部，比如说是 H3 标签
以及一些消息？
`@Model.Message`
好的
所以它将是这样，也许在消息不存在的时候，我们会想隐藏它，我们可以做很多的事情，但现在
现在，只需一秒钟，我们这样就可以了
但这只是一个例子，它与数据库无关
你并不想把数据临时保存到数据库中，仅仅是想找个地方临时保存下数据
一些用户的操作信息
嗯，是的，这是一种常见的想法，这就可以了
这些就是了
这可以你想要的任意的东西，或者你想对它做任何操作都行
它可以通过 jQuery 或动画添加淡入效果，或任何让你开心的东西
（刷新后）这与刚才不同，这是默认状态，对吗
让我们再来试一次，看到了吗
嗯
这是因为它被称为临时数据，我们在这里和它最初定义的地方有相同的名称
所以它就很神奇地来到了索引页面，多么贴心的功能啊
很棒
很酷，对吧
现在我们非常非常简短地来谈谈有关日志的事
我们不会在日志中真正的做什么
让我们来看下这个
在这我们可以看到了
是的
我们看到了两种不同的日志记录
我们看完了这个
然后我们看到了更多信息
所以这些是警告等级的，然后这些是
哎呀，原谅我
哦，这就是了
这里有警告，有调试，而且你可以有不同的小节
你可以说，我只想要来自微软的信息，但我希望得到其他人的调试信息，对吧？
那么我们来看看，我们是否可以弄清楚如何记录日志
好的，我们回到了这里，我将尝试记住如何从头开始
你能告诉我该怎么做嘛
你要试着记住吗
嗯，你懂得
我只是想做得对，而我一直没有把所有这些东西都放在脑海里
这里应该是 ILogger 吧
是的，但你可能需要添加相应的服务
好的，添加服务
然后我们必须使用它
`AddLogging` 就好了
然后我们可以用 `app.` 我不认为它是这样用的
你把它搞定了吗，是 ILogger 吗
我认为这应该是 ILoggerFactory
我想是的
看到了吗？
是的，你必须添加扩展
这部分脱离出来变成了拓展，这很好
极客们的工作是它变得更好
那这样就好了
然后我们只需这样，嘿， loggerFactory ，如果我在控制台中记录日志，我可以添加控制台
而且你可以记录到各种各样的地方，比如说文件，或者 Application Insights ，如果你愿意的话，各种东西都行
如果你使用 Application Insights ，那它会需要一些参数
现在，我就使用了 `AddConsole` 和 `AddDebug`
好的
现在
你还需要第一行代码吗？
这行代码是在我从命令行运行的时候想要输出日志，那我想我会需要它
那么这是一个选择吗
嗯，是的，若我或者我团队中的某人在控制台中运行时，我希望向他们输出些信息
在有可能的情况下，向控制台输出
所以我想说的是你不需要同时有两个，对吗
不不，在这我指的是我正在将日志输出到多个位置
好的
我可以把它输出到 app insights ，文本文件，或者是数据库
这很奇怪
但我能做到这一点
所以现在我把日志输出到了两个地方，原谅我
是的，这样做很酷，然后，在一个我可能想要使用它的地方，还记得我们之前如何把所有东西放在一行代码中嘛
我们要把它展开，我想我会用， `private ILogger`
我认为它将是 `CreateModel` 类型，我只需键入 `Log` ，然后我们需要 `ILogger<CreateModel> log` ，之后我们再次换行
现在这里我用了不同的风格，这里这个人使用的 _db ，我用的大写的 L ，你应该选择一种风格并坚持下去
那么下划线真的只是一种风格吗
这只是一种风格
就是说这是私有的，或者它是只读的，或是内部的
很多人都有不同的风格
公开属性最好以大写开头
是啊
曾经有一段时间我们使用 m_ 来标记私有成员
现在人们有时把 _ 用于内部或只读变量
我只想说我应该对我命名的方式更负责任
是的，你应该的
我会的
真令人伤心
好的
这个字符串就在这里
我可以重用它
然后，把它换成日志，对吗
我可以用 log- 不同的日志等级
是的，我可以用 LogInformation ， LogDebug ， LogCritical
让我们用 critical 级别吧
虽然这完全不重要
但我可以说，这里出现了一些问题
客户也会说，我的天哪
对，然后，它可能会变红，对吧
实际上这值得我们去尝试一下
所以，如果我是一个 Web 应用
我的 Web 应用在哪里
它在这儿
那么让我们去那个地方
好啊
我将尝试在命令行中执行 `dotnet run`
这是一个很好的提醒，你可以在 Visual Studio 中做这些事情，或者你可以跳回命令行操作，这也很酷
所以它给你- 64005端口
哦不，让我把它放在那里，把它放在这里
它在那， critical
啊哈
很好，这是控制台的形式
之前提到过的想法，就是信息可以向多个不同的地方输出
所以让我们关闭它
我们可以在调试中看到它
然后让我们在 Application Insights 中进行操作
好的
那个很酷
你也可以看到调试器，对吗
关键是，这条信息流正在向外传播，它可以进入命令行，一个窗口，
或是 Windows Debug 文本文件，这完全取决于你
好吧，所以，我要关掉一下标签页
这太多了，已经影响到我了
好的，回到这里
我要点击右键使用，添加 > Application Insights
好的
而且你已经做过好几次了
不过这是诀窍
你可以这样做，注册一个 Azure 账号，你会发现这是免费的，大概会有 1G 的流量
就是这样
在那里，我们将注册你的应用
即使你在本地运行应用，也可以将遥测数据发送到云端
我们稍后会这样做
好的
但我希望向大家指出的是这并不是必须的，是吧
他们希望你注册
而且我认为你注册是值得的
但是，你也可以尝试只在本地运行
好的
这有点微妙
因此，你可以尝试只在本地运行，这意味着你的数据不会被发送到云端
但你可以把这些数据导出来放到任意地方
比如，你可以向某人发送报告
当然，重点是云可以为你提供更多洞察力，它可以提供所有的分析功能
而且你在云中拥有无限的空间
我记得这些都是免费的
然后，除此之外，你还可以在云中执行各种不能在本地执行的操作
是啊
但我要说的是，没有理由不在本地尝试
即使在飞机上，你也可以用它做出惊人的东西
你知道我的意思吧
所以，让我们去运行它
你刚刚在一些应用内部添加了些什么
嗯，问得好
通过执行前面的步骤，我添加了一个包，且它会将它自己添加到 pipeline 中
因此，你不必手动将其添加到 pipeline 中
它会默认自动添加
是的，这很神奇
我想实际上我们可以看看它，让我们转到那里
这个文件在什么地方呢
csproj 在这里，我们可以打开它
它就是了
好的，好的
所以它只是一个包
一旦它添加之后，就会添加到 pipeline
它会收集各种东西
现在我可以去真正地查询我的应用
它现在正在运行
好的
应该清楚
我们去创建一个东西吧
我会进入到这，注意看，这些数字正在逐渐增加
是啊
让我再来一遍
添加一个新的东西
是的
嗯嗯
这些事件正在发生
我可以点击它，这就是你想要的
这很贴心
我可以看到请求以及跟踪的数量
你可以对它进行过滤吗
当然，你可以过滤，只是告诉我创建的信息，或是使用这个版本的人，或是使用 Chrome 的人，或是使用 Firefox 的人，或是执行超过一秒的事情，对吧
你可以在这里查看整个列表
我可以进行查找，看
然后它有这个非常友好的图标，让你你知道什么是对的
看，还记得我们是怎样为添加客户添加一条 critical 日志的吗
当然
我还能双击这一条独立的追踪，对吧
那么，我们可以看到计算机的名称和操作
看，这些是问题的严重程度和操作
我还可以这样做，显示这个用户的所有遥测数据
你可以会有这样的情况，比如，我有一堆的用户触发了这个事件
在这一些有共同点的本地信息将会出现，然后你就知道云端的好处了
但其中一个很好的选项是，当发送一些事时
嗯嗯
Beyonce 已被添加
向我展示前后5分钟的遥测数据
好的
对吧，因为 bug 可能不是她附近的，它可能是 在她周围
在她周围，或者更远的地方
对吧
是的
然后，我可以随着时间的推移去绘制这些东西
同样，这都是本地的
这是你在当地获得的东西
然后，当你想要更多的信息时， Application Insights 门户中有各种各样的好东西
这会帮你打开一个链接，对吧
链接就在那里，你可以去试一下
我们将在另一个谈话中探讨一堆这些东西，看这儿
在这里，当你登录时，你可以选择你的资源，然后查看依赖项，你的应用如何与数据库交互，调用另一个 Web API
如果你没有把它放在云中，你就无法做到
在这里，我刚刚添加了一个过滤器，我只选中了 Create 页面的数据
我可以关闭那个过滤器
只展示花时最长的操作
过滤掉那些
这些就是记录，你可以进一步查看
其中一个请求花了很长时间，点击它
这是最初的请求
好的
它第一次编译该页面
这样是不是很棒
这真是太棒了，令人印象深刻
我非常喜欢 Application Insights
很酷，所以，我觉得这让我们处于一个很好的观察视角，不是吗
我们完成了一个不错的小型云应用，基本的 Bootstrap ，它正在与 Application Insights 交互，我们已经有了日志记录
我认为这是一个非常好的初学者开始，你不觉得嘛
是的，在过去的几个小时里，我们已经完成了很多的工作
那他们现在应该去哪
文档
文档，去看文档吧
转到 docs.microsoft.com ，开始吧
那有很棒的样例以及很棒的互动体验
如果你看到了这里，请给 Hanselman 一个掌声
是的，在推特上给予我们鼓励
在 Twitter 上
我和 Maria
并且一定要浏览 Microsoft Virtual Academy 中的所有不同的优秀课程
这只是对于初学者的 ASP.NET Core
我们有面向初学者的 C＃ ，各种基于云的很棒的内容，以及中级和高级的内容等等
非常感谢你在 Microsoft Virtual Academy 上与我们共度一天