所以我们回来了，我们会看看页面。
在之前的模块中，
我们着眼于构建我们第一个空的Web应用程序。
但它并没有太大的作用，对吧？
它只是返回一个字符串。
当我考虑建立一个页面时，
我不知道你是否以同样的方式思考这个问题。
>>其实我是。
>>我想看到一些HTML。
我想看到一个物理页面结构，并且
如果你真的回到项目文件夹
像我们所有的文件一样，我没有看到一个页面。
>>对，现在这不是专注于网页，
它专注于字符串。
虽然我可以进去，也许可以大胆面对，
碧昂丝，它会很快分解。
>>是的。
>>所以，我们需要一个专注于页面的框架。
>>我们这样做。
只是为了让它恢复一点点，
你谈到了配置服务和配置。
>> Mm-hm。 >>而且
我们要在这里配置我们的第一个服务。
>>对。
>>是的，所以，如果你输入services.add MVC。
>>所以如果我输入services.Add，
我得到了所有这些选择 - >>是的。
>>我们之前看到过。
这些都是可以分层的不同的东西
我们应用程序的顶部。
>>是的。
>>重要的是要理解，就像我们谈论的那样
之前，当我们回到节目。
这只是一个主要的，记得我们之前做过一个控制台应用程序，
但我们正在建立这种服务渠道。
那么你想要我添加什么样的服务？
>> MVC。
>>添加MVC。
所以这将添加所有的模型视图控制器服务
我可能会想要使用。
>>没错。
>>好的，现在我添加了它。
有一个波浪，然后波浪消失了。
它是不是神奇地变成了Mvcf？
>>不，请记住，我们配置我们的服务，并且
那么我们需要配置。
所以我们实际上必须使用它。
>>必须使用它们。
我们添加它们，然后我们使用它们。
>>是的。
>>好的。
>>那么我们app.UseMvc？
我认为我们不需要。
>>值得指出所有不同的用途。
>>其中很多。
>>有你的Facebook，你的Google。
>> Mm-hm。
>>你的不同，所谓的中间件，
你会在这里介绍一些高级内容中的中间件，
但是现在正在制作一些中间件。
有两个选项，默认路由或
经常使用的UseMvc，我们只会自己说UseMvc。
有很多选项可以传入。
稍后我们会谈谈一些关于路由的问题。
所以，我说UseMvc。
所以，现在Mvc正在筹备中。
>>是的，所以我们可以开始利用它。
我不认为你会需要最后一行。
>>好吧，让我们来看看它是否还在运行。
我们所做的只是添加MVC和UseMvc。
Hello Beyhive仍然会发生吗？是。
现在它很大胆，
因为我大胆地面对它。
>> [笑声] >>好吗？
对。
因此，指出它正在处理中，但是
它没有改变任何事情的行为。
>>是的，因为在这一点上它没有被使用。
>>好吧，我们还没有添加任何页面。
>>是的。
>>好的。 >>所以，我不认为，
因为我们将要使用MVC，我不认为我们需要
app.Run更多。
不过，我想保留在那里。
>>好的。 >>如果你不介意，
因为当我们添加我们的网页时，我想看到这种关系
在这之间，现在称为默认路由。
>>好的。
>>默认路由。
这是发生的事情，如果这没有发生。
>>好的。
>>就其意义而言，它按顺序运行。
>>是的。
>>这有道理吗？
>>是的。
>>那么，让我们来做你想添加的页面，
看看碧昂丝是否随机出现。
>>是的，你提到了一件非常重要的事情
很多新手。
这是代码的编写顺序吗？
>>这很重要，
特别是当您依次添加和使用事物时。
我相信，如果我们把Mvc放在这里，
我们将有非常不同的体验。
>>没错。
>>我们可以尝试一次
添加一些东西。
>>是的，这是补充。
>>好的。
>>好吧，我想要做的第一件事就是添加一个新文件夹。
>>好的。
>>是的。
>>所以我在一个Visual Studio代码中过来，我可以
点击，然后说新建文件夹，或者我可以点击这些按钮。
我要点击右键并说出一个新文件夹，因为我找到了
这取决于当前点击的内容
上，当你说新的文件夹 - >>你可能会结束
别的地方？
>>它有时可能像一个文件夹一样，所以
只是要注意这一点。
所以，我确认我的Pages文件夹，你有我补充，
处于同一水平而不是偶然 - 
>>在wwwroot中？
>>或者在最后或任何地方。
所以，它可能有点混乱，好吗？
所以，我有一个Pages文件夹。
>>好的，现在我们实际上需要添加一个页面。
所以如果你添加新文件，并且
我们将添加一个Index.cshtml。
>> C＃HTML。
>>是的，所以我总是称它为C＃HTML，但是
我被告知这是不对的。
>>这不是，它只是一个RAZOR页面。
>>这只是一个RAZOR PAGE，是的。
>>好的，忽略这个扩展。
>>好的。
>>很明显，HTML是。
>>好的。
[笑声] >>好吗？
>>它的确如此。
所以我想要做的第一件事就是添加一个页面指令。
所以它会是@page。
>>好吧，@page，所以指令以@开始。
>>是的。
>>好的。
>>我们将在一整天内看到其中的几个，并且
看到你可以用这个做什么。
>>好的。
>>我们只是要写一些HTML，所以我们只需要使用h1。
>>好的，我得到IntelliSense，这很好。
>>你好碧昂丝。
>>很酷。
>>想象一下，碧昂丝是否真的学习了其中的一种代码
视频。
>>我没有一个花哨的键盘。
>>你想确保你 - >>我得尊重她。
>>你必须尊重Bey。
>>我们走了。
>>她会明白，有一天，
当她看这个视频。
>>当她看到这个和
邀请我到她家吃午饭。
>>当她看这个视频。
[LAUGH]好吧。
>>好吧，我需要做其他事吗？
>>是的，你救了吗？
>>是的。
>>让我们看看会发生什么，让我们来运行这个。
>>好的。
做，做，做，去运行。
它会激发本地主机5000。
好吧。
>>哇。
>>这很有趣。
所以Index.cshtml似乎是默认的。
>>是的。
>>我想知道我是否改名？
>>让我们试试看>>然后点击刷新。
>>不，
你现在实际上有 - >>不，看，
该字符串从哪里来？
>>它来自线路，回去。
是的，它来自第31行。
>>对，所以这里要说的是，使用MVC，
添加了一些默认路由，一些行为。
>>是的。
>>当我们说路由就像URL进来时一样，
它必须决定谁来处理这件事。
>>没错，如果你回到你的页面，并且
你做了/ fred，它会弹出吗？
>>这是一个很好的问题。
斯莱什，弗雷德。
是的，好吧
现在我们开始对这种行为有所了解了。
>>所以默认情况下，仅仅因为它的'所谓的索引，一些魔术，
MVC默认不添加魔术作为默认路由。
>>对，对。
>>好吧，如果我们添加了另一个页面，并且
也许我们这里太疯狂了。
>> Mm-hm，想添加另一个命名页面？
>>命名页面，是的。
>>好的，你想叫什么？
索朗？
>>是的，还是蕾哈娜，或者如果，无论你想要什么。
>>好吧，好吧，这里有另一个。
>>此页面在我正在考虑它在 - 
>> / Solange，对吗？
>>没错。
>>是的。
>>所以，我们只需将它放在段落标记中即可。
了解Visual Studio代码如何帮助您？
我应该打开我的IP开始。
我们走了。
>>所以如果你 - >>所以有我们的默认。
我没有再运行它吗？
>>我认为你没有。
好吧，所以我dotnet运行。
所以，这是我们的默认设置。
和。
那个没有出现。
>>不是。
>>为什么我们不把它放在一个文件夹中。
>>在一个文件夹中？好的。
>>然后，将其称为索引。
>>那么，它必须是Solange /索引。
>>不，cuz索引是默认值。
>>有趣。
>>你好Beyhive。
[CROSSTALK]让我们来思考一下。
>>好的。 >>我们做错了什么？
这很好，因为我们正在做一个 - 
>>我们正在做一个实验。
>>在这里和过程中进行实验。
我们正在学习事情如何运作和做错事，对吗？
我们会一起做事情。
所以，我刚刚改变了这一点，我们之前做过Fred。
>>是的。 >>我知道它是什么。
>>告诉我。 >>好吧，检查一下，
朋友，让我们回去把它放回Solange。
好的，这里是索引。
>>是的。
>>仔细看，只有几行。
>>是的。
>>这是Solange。
>>我们没有放置页面指令。
好极了。
>>好的。
>>非常有趣。
>>有趣的，那么 - >>是这样做的
魔术，实际上它运行，如果它没有看到
页面指​​令，它永远不会。
>>这不是它需要去的方式。
>>不必这样工作。
所以，这个有趣的事不知道我知道，但是
就像我直觉地了解它。
>>但这是一些东西
在家里有人会遇到。
>>是的，是的，它绝对是。
>>这绝对是你会遇到的
就像我们击中它一样，这是我告诉你要做的第一件事
是添加页面指令。
>>是的，绝对。
这实际上提出了一个有趣的观点
Visual Studio与Visual Studio代码。
>>是的。 >>当我们切换到Visual
代码稍后我们将使用内置的模板进行合并。
所以，我们要去说新的剃刀页面。
>>没错。 >>而且
我们会免费获得一些东西，因为我们只是在做这些
我们自己的文本文件碰到了这种错误，所以
这真的很有趣。
这确实提出了有关文件夹的问题，
我们为什么不尝试呢？
>>好的。 >>让我们先制作一个文件夹
那，然后我们在这里移动它。
>>没错。
>>然后，将其更改为索引，这似乎是默认值。
>>所以，如果你刷新页面。
>>是，同一页[串音]。
>>但是如果我在这里改变它。
所以，只需探索一下，看起来就是这样
没有必要的文件的名称，但路径。
所以，你的默认路由将是路径，然后是另一条路径，
在这种情况下，默认页面就在那里，你看到了吗？
>>是的，那么路由是文件结构呢？
>>路由是文件结构。

3617/5000
哪一个
一个专注于页面的框架是一个非常好的体验。
>>这对我来说是完全意义上的。
>>对。 >>喜欢当你建立你的
第一个HTML页面，它有相同的经验。
是的，在一个文件夹内的页面。
>>这意味着当我们稍后去做顾客时，
和产品，以及类似的东西，
如何做到这一点将会非常清楚。
尽管这只是静态的HTML。
>>是的。 >>我们可能应该添加
在我们进入下一部分之前，一些动态的东西。
所以，让我们给Solange更多的信息。
>>所以，我听说她今天有一场音乐会。
>>好吧，让我们假设它现在总是现在，
总是有索兰吉音乐会。
>>总有一个 - >>在任何时刻。
>>没错。
>>所以，我们会有大胆的事情，我们应该说什么？
演唱会开始，我不知道，下午3点，
对吧？，但我想这是动态的。
>>好的。
>>我现在怎么做到这一点。
>>在DateTime。
>>所以，我再说一次。
>>是的。
>> DateTime，就像system.DateTime
>>现在。
>>现在。
好吧，回来，刷新，然后重新刷新。
>>我迟到了，我得走了。
>>你得走了，发生了。
>>现在正在发生。
>>现在需要指出的是，
注意到我做出改变的区别。
>>是的。
>>控制+ S + L +标签刷新。
我不需要建立。
>>没有。
使用剃须刀页面时，页面在更改时正在构建，
它第一次受到打击，
如果我更改我需要的C清晰文件，然后去重建。
>>好的，但是
在页面本身中，你不需要这样做。
>>所以，这些CSH开发页面的剃须刀页面。
他们被复制到主机和
他们是源代码的一部分。
但是这些.cs文件不会被复制到主机，
实际上他们构建的DLL确实如此。
>>好的。 >>对，
这只是指出一点点重要的事情，而且
你可以看到，如果你去说，dotnet构建。
我们一直在说网络运行。
>>是的。
>>见？
看看它实际上指向你的网络应用程序？
它说，mywebapp就在那里。
>>所以，我有一个问题要问你。
如果有人在这，谁现在正在看我们。
就像他正在谈论的那件事一样，
他们可以在哪里了解更多？
>>好吧，这就是所谓的装配，它是一个动态链接
图书馆，如果你想了解
关于程序集如何工作的细节。
你可以去看看一些中间商
部分工作。
>>好的。
>>好的。
我只是想指出，当我去和
发布我的应用程序，就像我想说的是时候了
我的应用程序要走出去的世界。
我们会得到 - >>而且要清楚
有些人在看这个。
发布它并不一定意味着你会打
.NET发布和
不知怎的，它会神奇地出现在网站上。
>>对。 >>是的，我喜欢 - 
>>我的意思是
我需要人们了解它们之间的区别
C sharp文件中的源代码和剃刀
要通过最终位置复制的页面。
很酷，所以这里有一点C尖锐。
>>是的。
>>对，我想知道我是否可以作弊。
>>你想骗多少钱？
>>那么，我们可以在这里写出C尖锐的，对吗？
我能说2 + 2吗？
我可以在那里说些什么？
>>打破它？ >>好吧，那么
那有一个错误，对吧？
所以，它不喜欢那样。
关于你可以放在那里的规则是什么？
我们会稍微探讨一下，
正如我们可以说的，然后把大量的代码。
>>好的。
>>好的，很酷。
所以，这是动态的，有一场音乐会立即开始。
然后，我们会回来一点点
看看配置。
>>好的。