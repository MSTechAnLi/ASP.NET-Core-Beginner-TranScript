1
00:00:00,000 --> 00:00:00,975
翻译+校对 - 遗落星痕 Ice北极熊
时间轴 - Ice 北极熊

2
00:00:01,075 --> 00:00:01,575
Hey, friends!
嘿，朋友们

3
00:00:01,600 --> 00:00:04,113
All right, so we have made a console app.
现在我们已经制作了一个控制台应用

4
00:00:04,375 --> 00:00:09,450
We have explored the documentation.We've installed the .NET Core SDK and Visual Studio Code.
我们也浏览了文档，并且安装了 .NET Core SDK 和 Visual Studio Code

5
00:00:10,125 --> 00:00:13,100
All right, next, let's make a Web Application
好了，那接下来，我们要制作一个 Web 应用

6
00:00:13,275 --> 00:00:13,825
Exactly.
没错

7
00:00:13,990 --> 00:00:19,375
All right, so if we look at my screen here,we have the folder that I have my console app.
现在看向我的屏幕，在文件夹中已经有我们的控制台应用了

8
00:00:19,825 --> 00:00:21,975
And so let's so we have to create a brand new folder.
所以我们必须创建一个全新的文件夹

9
00:00:22,050 --> 00:00:22,900
All right. Yeah.
嗯，是这样

10
00:00:22,950 --> 00:00:28,100
I just wanna point out that all that did was a WriteLine, and it output it to the console
我们要做一个什么样的程序呢？最起码应该做到通过 WriteLine ，并把内容输出到控制台

11
00:00:28,150 --> 00:00:33,142
not particularly impressive, there's no web browser here.
但其实这也没啥特殊的，也没有用到浏览器

12
00:00:33,550 --> 00:00:34,900
There's just, Hello Scott.
只是做了一个 Hello Scott

13
00:00:35,375 --> 00:00:42,750
Yeah, we need to when you're learning about a Web Framework, you want to do something on the web. -Absolutely
嗯，如果你正在学习 Web 框架的话，你肯定会想通过 Web 做一些有趣的事嘛 -当然喽

14
00:00:42,800 --> 00:00:44,100
So let's do it.
我们一定要搞一个大新闻

15
00:00:44,189 --> 00:00:47,200
I just wanna juxtapose the difference between the two, so let's take a look at that, all right? -Yeah
我想先比较一下这两个程序有啥区别，让我们来看看那个吧 -好的

16
00:00:47,850 --> 00:00:49,375
So what do you want me to do?
我们应该怎么开始，你有好的建议吗

17
00:00:49,425 --> 00:00:51,600
So can I teach you a new trick?
没准我可以教你一个新的技巧

18
00:00:51,725 --> 00:00:52,275
Let's do it.
可以，来吧

19
00:00:52,400 --> 00:00:58,725
That you can create your web application and a directory at the same time? -Are you sure?
你可以在同时创建你的 Web 应用和目录吗 -你确定吗

20
00:00:58,822 --> 00:01:00,000
I can do it.Cuz I like making directories.
可以是可以，但我喜欢直接创建目录

21
00:01:00,150 --> 00:01:03,550
I know, I know, but like try something new. -All right, all right, I'll try.
我知道，但尝试一下新的东西总是好的吧 -好吧，我会的

22
00:01:04,006 --> 00:01:08,350
So dotnet new web -o.
dotnet new web -o

23
00:01:09,958 --> 00:01:11,975
And let's call it mywebapp.
起个名字叫 mywebapp 吧

24
00:01:12,375 --> 00:01:18,375
So we, in the previous video,we looked at the different .NET templates that are available.
其实在之前的视频中我们就查看了各类可用的 .N​​ET 模板

25
00:01:18,450 --> 00:01:21,825
Web is just one of the templates. So we looked at console, and now we're looking at web,
Web 只是其中的一个模板，我们已经了解了 console ，现在我们需要看下 web

26
00:01:21,900 --> 00:01:24,475
just for people who might be tuning in now. -Okay.
稍等一下，我觉得有必要等一下屏幕前的小伙伴。 -好的

27
00:01:24,525 --> 00:01:25,225
So hit Enter.
敲下回车

28
00:01:26,625 --> 00:01:33,800
So it says the template core empty, been created successfully, and it put in a folder called mywebapp.
欸，你看模板 ASP.NET Core Empty ，已创建成功，并放在了名为 mywebapp 的文件夹中

29
00:01:33,825 --> 00:01:36,400
So I like to go and make the directory, and then go into the directory,
你喜欢先创建目录，然后进入目录

30
00:01:36,775 --> 00:01:41,800
and you're saying I can go -o, it'll make the folder and name the thing,all at the same time At the same time.
但是使用 -o 命令，它会同时创建文件夹和同名项目，这两任务同时给你整好了

31
00:01:42,125 --> 00:01:43,425
And if you think about it
而且你想想

32
00:01:43,525 --> 00:01:49,175
if somebody's following this outside of Windows,the way they created directory there might be a different.
如果有人在 Windows 之外使用这种方法，他们创建目录的方式可能会有所不同

33
00:01:49,275 --> 00:01:53,625
That is a valid point you're right cuz I said, md and they might say, mkdir
说的好，确实是这样，因为我用 md 他们可能会用 mkdir

34
00:01:54,025 --> 00:01:54,975
And that's a good point.
提醒一下小伙伴们

35
00:01:55,275 --> 00:02:00,650
All right, and when I did that, just as you said, we did a .NET new web.
好的，还有当我这样做时，就像你说的，我们完成了一个新的 .NET 网站

36
00:02:01,366 --> 00:02:07,075
Which is this one this is an empty one. Anyway there's different web options that we'll explore later.
这个应用并没有包含具体内容。当然还有别的可创建网站的选项，那些我们等会说

37
00:02:07,375 --> 00:02:10,500
But right now we made the simplest possible web application.
但现在我们完成了最简单的 Web 应用

38
00:02:10,550 --> 00:02:15,675
Exactly, just like the step just above a console right at the line. Okay Just right above it
确切的说，创建的时候只用了一行命令就给解决了

39
00:02:15,850 --> 00:02:18,885
We can go into let's go into the mywebapp,
让我们来看看这个程序，先进入 mywebapp （目录）

40
00:02:19,925 --> 00:02:25,800
and I see a csproj which makes sense, I see a Program.cs,
然后我看到了 csproj ，这是必须有的哈，我还看到了 Program.cs

41
00:02:25,900 --> 00:02:30,450
which I had before. -But this is something different. -I see a Startup.cs and a wwwroot.
之前我们就见过这些文件了 -但是这些和之前有所不同 -我看到 Startup.cs 和 wwwroot

42
00:02:30,575 --> 00:02:33,225
Now we could poke around here at the command line, but you showed me
现在我们可以在命令行中试一下，但是若能打开

43
00:02:33,429 --> 00:02:34,400
that VS code is better.
VS Code 就更好了

44
00:02:35,000 --> 00:02:36,950
It's pretty good.
这很好

45
00:02:37,075 --> 00:02:39,000
It is better, so let's go into there.
完美，让我们在这打开

46
00:02:39,600 --> 00:02:42,981
Now, this is interesting, by the way, I tagged code dot
这就好玩了，顺便说一下，我键入的是 code .

47
00:02:43,400 --> 00:02:45,237
it opened up my web application.
它打开了我的 Web 应用程序目录

48
00:02:45,575 --> 00:02:47,625
It's worth pointing out that if you notice in the background
你看到了没，如果你注意到背景

49
00:02:47,650 --> 00:02:50,325
there, it also opened my previous windows.
在那里，它也打开了我以前的窗口

50
00:02:50,900 --> 00:02:57,045
VS Code likes to put things back the way it was so it's restoring my session.
VS Code 能够记录你的工作状态并且恢复上次的会话

51
00:02:57,700 --> 00:03:01,050
I'm gonna go and close the console app from earlier.
但是我们要先关闭之前的控制台应用

52
00:03:01,500 --> 00:03:04,675
And we'll just say, there's that warning again
欸，它又出现了这种警告

53
00:03:05,025 --> 00:03:08,550
required assets to build, it's totally okay to say yes,
为构建添加所需的资源，这毫无疑问的选 yes

54
00:03:08,650 --> 00:03:13,797
because we wanna be able to debug our web application, all right
因为我们总希望能够调试我们的 Web 应用，对吧

55
00:03:14,125 --> 00:03:16,775
So I noticed you have a couple of things down there are those additional.
我注意到你在右下角有一些额外的东西

56
00:03:16,875 --> 00:03:17,800
Yeah, that's a great point.
是那些确实是一个值得关注的地方

57
00:03:17,850 --> 00:03:22,075
So down here, I've got some extensions,these are like a little accordion extensions
在下方这里，我有一些扩展，这些像小手风琴一样的扩展

58
00:03:22,100 --> 00:03:28,725
If I want to play with Docker, or if I'm gonna be using Git, so GitLens and Docker are extensions.
如果我想玩 Docker ，或者如果我要使用 Git ，那么 GitLens 和 Docker 就是所需的扩展

59
00:03:29,275 --> 00:03:36,549
If I click here on the left, you can see my installed extensions,and recommended extensions.
如果我点击左边这里，你可以看到我的安装扩展和推荐的扩展

60
00:03:37,075 --> 00:03:41,541
And I could go and search for extensions here as opposed to using the web.
我可以在这里搜索扩展，而不必使用网页版

61
00:03:42,165 --> 00:03:43,900
Cuz I was just moving them out of the way.
这里我就把他们移开了

62
00:03:44,175 --> 00:03:45,600
All right, cuz I just noticed something different
好的，因为我刚注意到一些不同的东西

63
00:03:45,650 --> 00:03:47,637
so I was asking questions for the people at home.
所以我想帮屏幕前的童鞋问一下

64
00:03:47,900 --> 00:03:48,645
Definitely useful.
不错的提问

65
00:03:49,150 --> 00:03:50,675
So let's just move that out of the way, here we go.
我们先不理它了，继续吧

66
00:03:51,100 --> 00:03:55,701
So Program.cs, this is a little bit bigger than it was before.
Program.cs ，这比以前的稍大一些

67
00:03:56,275 --> 00:03:59,500
Cuz it's bringing a bunch of stuff that if we look at the previous one
因为它多了一堆东西，如果我们对比一下前一个程序

68
00:03:59,525 --> 00:04:03,275
while we putting much only had using systems and maybe IO.
而我们很多时候只使用 systems （指以 System 开头的名称空间），可能还有 IO

69
00:04:03,700 --> 00:04:05,800
Actually, that's a good point, let's open up the csproj.
说的好，我们来打开 csproj 文件

70
00:04:06,025 --> 00:04:08,200
Yeah. -If you recall earlier
嗯 -你可以回忆下先前的内容

71
00:04:09,525 --> 00:04:16,775
our SDK was Microsoft.NET.Sdk.Web,this is a web application.
而在这我们所用的 SDK 是 Microsoft.NET.Sdk.Web ，这是一个 Web 应用

72
00:04:17,975 --> 00:04:23,875
This is new, indicating that there as a folder called,wwwroot, that we'll talk about in a little bit.
这是新的，还有一个文件夹叫做 wwwroot ，我们稍后再谈它

73
00:04:24,300 --> 00:04:28,476
And we have our first package reference, Asp.NetCore
这是我们第一个引用的包， Asp.NetCore

74
00:04:29,175 --> 00:04:30,650
specifically .All.
注意到是 .All 了吗

75
00:04:32,268 --> 00:04:33,875
So literary everything?
它能包含所有的内容

76
00:04:33,950 --> 00:04:38,988
Right. Now, it could in fact be listed one item at a time,
没错，现在，它可以把一个个的项目分开

77
00:04:38,988 --> 00:04:41,050
ASP.NET Core broken up in a lot of different pieces.
ASP.NET Core 能分成许多​​不同的部分

78
00:04:41,525 --> 00:04:43,400
So it's kind of a cafeteria plan.
这些都可以随意组合

79
00:04:43,550 --> 00:04:49,475
Okay. -This is a package of packages, so rather than having a list of dozens of different
嗯 -这是一个由许多小包组成的大包，有些框架包含了几十个包

80
00:04:49,625 --> 00:04:52,450
packages, and having to pick ones I want, ones I don't want
不管我用不用得到，都给集成上了

81
00:04:52,825 --> 00:04:56,350
this makes it much, much simpler.It just gives me everything by default.
当然这也是为了免去麻烦的配置，使得它使用更方便，在默认情况下，它给了我所有的东西

82
00:04:57,075 --> 00:04:59,775
So for learning, it's easier for getting started, it's easier.
对于学习来说，这能使得入门更加简单

83
00:05:00,100 --> 00:05:03,900
If you're familiar with ASP.NET,it's easier because everything you expect is there.
如果您熟悉 ASP.NET 这就更容易了，因为所有你想用的都已经添加上了

84
00:05:04,175 --> 00:05:07,500
I was also, one thing I've also noticed,it is one version now
我也这么觉得，我还注意到了一件事，这里有一个版本号

85
00:05:07,692 --> 00:05:10,332
It's nice and simple, you just say, I want 2.0 and
这点很好呀，也很简单，你只需说，我想要2.0版本

86
00:05:10,475 --> 00:05:12,950
it brings in everything that hangs off of it.
它将决定所有未指定的版本号

87
00:05:13,075 --> 00:05:13,850
Of 2.0, okay
2.0，好吧

88
00:05:14,050 --> 00:05:17,025
I call it a metapackage or a package of packages.
我称之为元包或者由程序包组成的包

89
00:05:17,275 --> 00:05:19,116
I like that term, packages of packages.
我喜欢这个词， package of packages

90
00:05:19,350 --> 00:05:20,025
Yeah, nice and simple.
嗯，简单明了

91
00:05:20,675 --> 00:05:26,050
So if we go into Program.cs, you saw before we had Using System
让我们打开 Program.cs ，你会看到我们之前用过的 System

92
00:05:26,556 --> 00:05:34,175
And when we say Using System, that was what allowed us to type Console.WriteLine cuz System.Console.WriteLine.
在我们键入了 Using System 后，这将允许我们使用 Console.WriteLine 哦不 System.Console.WriteLine

93
00:05:34,700 --> 00:05:41,292
But here this is a web application, and we have other stuff, we've brought in some threading and
但这是一个 Web 应用，并且还加入了其他的东西，我们引入了一些有关线程以及

94
00:05:41,292 --> 00:05:44,844
some IO stuff, but this is the ASP.NET Core stuff that's added.
IO 相关的东西，这些就是 ASP.NET Core 所添加的东西

95
00:05:44,844 --> 00:05:48,252
What's worth pointing out those
值得指出的是

96
00:05:48,252 --> 00:05:52,572
our Main here is different than our console Main.
我们在这里的 Main 和我们控制台中的 Main 不同

97
00:05:52,572 --> 00:05:55,020
Before we had a Console.WriteLine,
之前我们有一个 Console.WriteLine

98
00:05:55,020 --> 00:05:55,836
and that was it.
就是这样

99
00:05:56,364 --> 00:06:00,204
And actually, this is totally off-script
其实，这些都是脚本生成的

100
00:06:00,204 --> 00:06:02,748
which implies of course, that we actually have a script, right?
这当然意味着我们确实有一个脚本，对吧

101
00:06:02,748 --> 00:06:04,750
I wonder if I could do this.
不知道我能不能这么做

102
00:06:10,075 --> 00:06:11,801
Okay, I just have a Main
我就只需要一个 Main

103
00:06:12,900 --> 00:06:15,614
and I've commented out all the web stuff.
我已经把所有与 Web 相关的注释掉了

104
00:06:16,520 --> 00:06:17,816
So, what would happen?
那么，会发生什么

105
00:06:18,248 --> 00:06:20,096
Let's find out.I wonder if it'll work.
让我们来试一试，我想知道它是否能运行

106
00:06:20,675 --> 00:06:21,632
Remember I've typed, control~?
记得我已经按下了键盘， Ctrl + ~

107
00:06:24,050 --> 00:06:26,621
I think it's tilda.I think if you say, tildi
我认为这是波浪号，如果你说， tildi

108
00:06:26,621 --> 00:06:28,475
you might have an accent of some sort, yeah.
你可能就会有某种口音

109
00:06:28,475 --> 00:06:30,956
I think it would be an accent that is completely and
我认为这将是一个彻彻底底的口音

110
00:06:30,956 --> 00:06:31,777
totally incorrect.
且完全不正确

111
00:06:32,518 --> 00:06:36,934
so it actually switched it over to a Console Application.
所以它实际上就像是一个控制台应用

112
00:06:36,934 --> 00:06:39,286
Right. Well, it didn't really switch it over
对的。 其实，它并没有真正地发生改变

113
00:06:39,286 --> 00:06:40,630
because it always was a Console Application.
因为它终究是一个控制台应用

114
00:06:41,302 --> 00:06:44,902
The idea being that they are the same thing, right?
可以把他们当作一样的东西，是吧

115
00:06:44,902 --> 00:06:49,750
A .NET application has a main entry point, and
.NET 应用程序有一个主入口点

116
00:06:49,750 --> 00:06:52,198
then it does some stuff.
然后它能完成一些工作

117
00:06:52,246 --> 00:06:55,462
And I just wanted to kinda juxtapose that it can do some consoley stuff
我只是想说明它可以作为控制台应用

118
00:06:55,462 --> 00:06:58,630
or it can do some webby stuff.
也可以作为 Web 应用

119
00:06:58,630 --> 00:06:59,878
So let's do some webby stuff.
来做一些有关 Web 的程序吧

120
00:06:59,878 --> 00:07:01,654
Like what would it look like out of the box?
就像是开箱即用

121
00:07:01,846 --> 00:07:03,334
Yeah, well, that's a good point.
是的，这很好

122
00:07:03,382 --> 00:07:06,214
So let's go back, dotnet run,
所以让我们回到命令行， dotnet run

123
00:07:06,214 --> 00:07:09,478
this time having changed it to say BuildWebHost.
这次改变后使用了 BuildWebHost

124
00:07:12,262 --> 00:07:14,134
And it's gonna run and build.
它会编译再运行起来

125
00:07:14,134 --> 00:07:17,446
And it says a couple of things.
输出了许多信息呢

126
00:07:19,510 --> 00:07:21,094
It's running in production.
程序正在生产环境中运行

127
00:07:21,718 --> 00:07:25,174
It's listening on localhost:5000, so
正在监听 localhost:5000

128
00:07:25,174 --> 00:07:27,718
we have started a little web server.
我们启动了一个小型的网络服务器

129
00:07:27,766 --> 00:07:28,102
Okay
嗯

130
00:07:28,102 --> 00:07:31,078
Now it says, listening at localhost:5000.
现在它显示，正在监听 localhost:5000

131
00:07:31,078 --> 00:07:35,494
Let's open up browser, and let's localhost:5000 it.
让我们打开浏览器，让我们转到 localhost:5000

132
00:07:37,558 --> 00:07:40,294
Can't you also just click on the link within the terminal?
你是不是可以点击终端内的链接

133
00:07:40,294 --> 00:07:41,734
Yeah, that is a good point.
对，说得好

134
00:07:47,590 --> 00:07:50,614
I guess I could or not.
欸?不能嘛

135
00:07:50,614 --> 00:07:52,582
Or not, okay.
不可以，好吧 （注：其实是可以的，按住 Ctrl 再点击）

136
00:07:52,582 --> 00:07:54,550
I don't know, yes.
我不知道哎

137
00:07:54,598 --> 00:07:56,662
It should.
它应该可以的

138
00:07:56,806 --> 00:07:57,670
It should work.
它应该能这样使用

139
00:07:57,670 --> 00:07:58,774
Except that's Hello World
除了那个 Hello World

140
00:07:58,774 --> 00:08:00,070
That's Hello World!, exactly.
这就是 Hello World! ，确实是这样

141
00:08:00,070 --> 00:08:02,710
So where is that, Hello World, coming from?
那么， Hello World 是从哪里来的

142
00:08:02,710 --> 00:08:03,526
Where is?
等一下

143
00:08:04,294 --> 00:08:05,590
Where is that text?
这些文字从哪里来的

144
00:08:05,590 --> 00:08:06,694
There's the text itself, so.
对，这些文字在哪里

145
00:08:06,694 --> 00:08:09,862
Yeah, let's find out, so let's follow it through.
好的，让我们一起来看看吧

146
00:08:09,862 --> 00:08:12,886
So BuildWebHost passes these arguments in and says .Run.
BuildWebHost 将这些参数传入并执行了 .Run

147
00:08:12,886 --> 00:08:15,958
What does BuildWebHost do?
BuildWebHost 做了些什么

148
00:08:15,958 --> 00:08:17,926
That's right here.
看到这儿

149
00:08:17,926 --> 00:08:18,406
Yep
是的

150
00:08:18,406 --> 00:08:22,390
Looks like it CreatesDefaultBuilder, and then it says, UseStartup.
看起来像 CreatesDefaultBuilder ，然后它调用了 UseStartup

151
00:08:22,390 --> 00:08:23,974
And then And
然后呢

152
00:08:23,974 --> 00:08:26,614
you can see here that the Startup text here is in blue,
你可以在这里看到这里的 Startup 文本是蓝色的

153
00:08:27,286 --> 00:08:31,126
that means it's not a, it's a keyword basically.
这意味着它有些不同，它像是一个关键词

154
00:08:31,126 --> 00:08:37,318
This here, these word, Startup, is telling it used this class.
在这里，这个词 Startup 告诉它使用这个类

155
00:08:38,758 --> 00:08:41,206
This class's name is not magic
这个类的名称并没有什么特别的

156
00:08:42,166 --> 00:08:45,478
if I changed it to Foo, It would not-
如果我将它改为 Foo ， 它会不会

157
00:08:45,478 --> 00:08:46,918
Well, let's find out
好吧，让我们来找出答案

158
00:08:47,014 --> 00:08:54,825
Let's go ahead and change it to Foo,hit dotnet run, See what happens.
让我们将其更改为 Foo 并继续键入 dotnet run ，看看会发生什么

159
00:08:56,854 --> 00:09:00,525
The type or namespace Startup could not be found, okay?
类型或名称空间 Startup 无法找到，这样的吗

160
00:09:02,350 --> 00:09:04,250
But what if I change this to Foo?
那如果我将这个改为 Foo 呢

161
00:09:06,475 --> 00:09:07,200
There we go
让我们来试下

162
00:09:13,654 --> 00:09:15,334
Pause, runs just fine.
它停了一下，运行成功了

163
00:09:15,622 --> 00:09:20,038
The point there being that the name Startup isn't magic.
这里要说的一点是， Startup 这个名字并没有什么特别的

164
00:09:20,038 --> 00:09:21,375
It isn't magic. Right.
这并不是魔术

165
00:09:21,375 --> 00:09:22,630
It does not have to be Startup.
它不一定非要是 Startup

166
00:09:22,630 --> 00:09:25,030
Nope, what it's saying is, again if we look at the docs,
它的意思是，然我们再看看文档吧

167
00:09:25,078 --> 00:09:27,718
and this is what's nice with Visual Studio code,
这对于 Visual Studio Code 来说很方便

168
00:09:27,718 --> 00:09:32,422
it says specify the startup type to be used by the web host.
它表示指定要由 Web 主机使用的启动类型

169
00:09:32,422 --> 00:09:36,070
So it's just saying go and use this class.
所以它只是说去使用这个类

170
00:09:36,070 --> 00:09:39,766
And this class here that we called Startup or Foo, or
像这里我们称之为 Startup 或 Foo 的这个类，或者

171
00:09:39,766 --> 00:09:42,742
whatever, has to be just be shaped a certain way
任意名称，但都必须以正确的形式填入

172
00:09:42,742 --> 00:09:43,654
it has to look a certain way.
它必须是正确的形式

173
00:09:43,654 --> 00:09:45,094
Okay, so you could call it Beyonce
好的，你可以称它为 Beyonce

174
00:09:45,094 --> 00:09:46,054
you could call it anything.
你可以给它任意的名称

175
00:09:46,054 --> 00:09:48,982
Yeah, it has to be a Beyonce.
好，它必须是 Beyonce

176
00:09:53,000 --> 00:09:55,798
I am afraid I should probably have
也许我们有别的选择吧

177
00:09:55,798 --> 00:09:59,014
but we'll just have Beyonce without an accent.
但我们只是用了 Beyonce

178
00:09:59,014 --> 00:10:01,270
And it should work just fine.
它应该运行得很好

179
00:10:01,270 --> 00:10:03,142
Beyonce should be a key word.
Beyonce 应该是一个关键词

180
00:10:03,142 --> 00:10:04,390
It should be.
应该是

181
00:10:04,390 --> 00:10:05,494
A reserved word.
保留字

182
00:10:05,494 --> 00:10:07,942
-It should be, it should be. -But its not, sadly.
-它一定是的。-可惜的是，它并不是

183
00:10:07,942 --> 00:10:08,998
So this is an important point though.
这是非常重要的一点

184
00:10:08,998 --> 00:10:10,438
It's saying use this startup type.
这说使用这种启动类型

185
00:10:10,438 --> 00:10:14,710
And that startup type has to have certain methods.
并且该启动类型必须具有某些方法

186
00:10:14,710 --> 00:10:17,830
So Beyonce, in this case, has to have a method
所以 Beyonce ，在这种情况下，必须有一种方法

187
00:10:17,830 --> 00:10:20,230
called ConfigureServices and one called Configure.
称为 ConfigureServices ，另一个称为 Configure

188
00:10:20,806 --> 00:10:25,366
And that's the requirements for Beyonce in this context for
这就是 Beyonce 在这一上下文中的要求

189
00:10:25,366 --> 00:10:26,470
the startup class.
作为启动类型

190
00:10:27,430 --> 00:10:28,870
So what's going on in these?
那么这些是怎么回事

191
00:10:30,358 --> 00:10:34,390
We've got- And you have the nice little instructions at the top, which I've always appreciated.
在上方我们会有一些提示，这是很赞的功能

192
00:10:34,390 --> 00:10:38,326
Yeah, I like it when templates include a little bit of instruction, a little bit of comments.
是的，当模板包含一些提示或一些注释时会让开发人员很省劲

193
00:10:38,326 --> 00:10:42,262
So this Method it's called by the runtime and
所以这个方法是在运行时调用的

194
00:10:42,262 --> 00:10:48,262
it adds services to a collection called the services collection.
它将服务添加到名为 services 的集合中

195
00:10:48,262 --> 00:10:52,294
And services are just stuff you might wanna use later in your app
而服务是指你稍后想在程序中使用的任意内容

196
00:10:52,294 --> 00:10:54,934
So it could be things like authentication,
可以是认证之类的

197
00:10:54,934 --> 00:10:58,630
so using a service like Facebook or Google, like which we'll
在使用像 Facebook 或 Google 服务的时候，我们可能会用到

198
00:10:58,630 --> 00:11:02,134
look at later dates, but- So if I just type services.,
如果我只是输入 services.

199
00:11:02,134 --> 00:11:04,870
you've got AddAuthentication, AddCaching,
你就能看到 AddAuthentication ， AddCaching

200
00:11:04,870 --> 00:11:08,902
AddIdentity, AddLogin, AddMemory, add whatever.
AddIdentity ， AddLogin ， AddMemory 以及添加任何内容

201
00:11:08,902 --> 00:11:13,174
And even things that don't appear like you pointed out.Like maybe Facebook authentication
甚至一些说不上来的东西，就像 Facebook 认证一样

202
00:11:13,174 --> 00:11:17,734
different kinds of those are all other third party things that could be added on as well.
和这些不同的其他第三方的服务都可以添加上来

203
00:11:17,734 --> 00:11:24,454
So those services get configured here,get added to this collection.
所以这些服务在这里配置并被添加到这个集合中

204
00:11:24,454 --> 00:11:25,702
Yeah. And it's a little confusing
是的，这有点令人疑惑

205
00:11:25,702 --> 00:11:29,302
-because you've got ConfigureServices. -And then you have Configure.
-因为你即有 ConfigureServices -还有 Configure

206
00:11:29,350 --> 00:11:32,374
Like that is something that confused me when I first started.
就像我初学时一样，这让我非常困惑

207
00:11:32,374 --> 00:11:33,430
Yeah, it is confusing.
是的，这是会让人感到困惑

208
00:11:33,430 --> 00:11:35,830
This is the get everything ready
这是为了做好一切准备

209
00:11:35,830 --> 00:11:38,806
load up the collection of stuff I want to play with.
加载我想要使用的程序的集合

210
00:11:39,382 --> 00:11:43,894
And then configure them. Set them up.
然后配置它们，设置好

211
00:11:43,894 --> 00:11:51,718
Like you could've maybe, maybe they could've named it AddServices or DoTheStuffWithTheServices.
你可以像这样命名它： AddServices 或者 DoTheStuffWithTheServices

212
00:11:52,486 --> 00:11:54,022
And then configure them.
然后配置它们

213
00:11:54,022 --> 00:11:54,646
Yeah, okay.
嗯呢

214
00:11:54,646 --> 00:12:01,846
But the point is one is prep your environment, and then do specific things to set your environment up.
但重点在于准备好你的环境，并且然后做特定的事情来设置你的环境

215
00:12:01,846 --> 00:12:06,358
Like, in this case, if we are doing development,not production
就像在这种情况下，如果我们正在进行开发而不是生产

216
00:12:06,358 --> 00:12:09,430
then when you get an exception you'd like a nice friendly page.
那么当你得到一个异常时，你会喜欢上这个友好的页面

217
00:12:09,430 --> 00:12:11,590
Okay, not a page of horror.
嗯嗯，而不是满页的恐惧

218
00:12:11,638 --> 00:12:13,654
Yes, not the scary page.
是的，不是可怕的页面

219
00:12:13,654 --> 00:12:19,000
This here is the app.Run,this is the default cuz you said we wanted to do empty.
这里是 app.Run 这里是默认的，因为你说了我们想要一个空的模板

220
00:12:20,350 --> 00:12:21,870
And you asked where Hello World!, was.
你问了 Hello World! 是来自哪里的

221
00:12:21,870 --> 00:12:22,918
And there it is
它就在那里

222
00:12:22,918 --> 00:12:23,926
There it is.
哦，那就是啊

223
00:12:25,366 --> 00:12:29,358
So we've change that text, and dotnet run.
所以我们已经改变了这个文本，并且运行 dotnet run

224
00:12:30,475 --> 00:12:31,790
It should still run.
它应该仍然可以运行

225
00:12:32,902 --> 00:12:35,830
Now if I come back over here, and notice it still says Hello World!
现在，如果我回到这里，注意它仍然输出了 Hello World!

226
00:12:36,406 --> 00:12:37,990
That's because we haven't hit refresh.
这是因为我们没有刷新

227
00:12:39,100 --> 00:12:40,088
And there it is
看，出现了

228
00:12:40,088 --> 00:12:41,398
Yeah, that's a good one.
是的，这很棒

229
00:12:41,398 --> 00:12:41,900
You like that?
你喜欢这个吗

230
00:12:42,598 --> 00:12:44,470
Excellent. I think the Beyhive would be happy.
太棒了，我认为 Beyhive 将会很开心

231
00:12:44,470 --> 00:12:45,094
They would be.
肯定会呀

232
00:12:45,094 --> 00:12:46,870
Alright, cool.
总之，很酷

233
00:12:46,870 --> 00:12:48,358
This is cool. Mm-hm.
确实很酷

234
00:12:48,358 --> 00:12:51,550
One of the things that, when you are working, so
事情正是如此，当你完成到这里

235
00:12:51,550 --> 00:12:56,925
we've seen hello world or hello Beyhive in honor of Beyonce.
我们已经看见了 Hello world 或者是 Hello Beyhive 以纪念 Beyonce

236
00:12:56,925 --> 00:13:00,200
But as a person who's building their webpage for
但对第一次建立网页的人来说

237
00:13:00,200 --> 00:13:04,012
the very first time, you want to see a page.
你想看到一个页面

238
00:13:04,012 --> 00:13:05,596
Like, you actually want to see something that's a little bit
就像，你实际上想看到一些别的

239
00:13:05,596 --> 00:13:09,628
more than just- A string.
而不仅仅是字符串

240
00:13:09,628 --> 00:13:10,492
Just a string.
仅仅是字符串

241
00:13:10,492 --> 00:13:12,316
Right, and certainly, having a string,
对，当然，若想看到字符串

242
00:13:12,316 --> 00:13:15,244
like doing all of your work inside of a Response.Write is
若你想在 Response.Write 中完成你所有的工作

243
00:13:15,244 --> 00:13:17,212
gonna break down pretty quickly.
你很快就会崩溃的

244
00:13:17,212 --> 00:13:17,740
Yeah. Right.
是这样的

245
00:13:17,740 --> 00:13:20,716
So in the next section, we're going to go an add some pages
所以在下一节中，我们将添加一些页面

246
00:13:20,716 --> 00:13:23,644
and build, take this, and we're gonna start from empty, though.
以及如何构建和运行，我们将从零开始

247
00:13:23,644 --> 00:13:24,892
Yeah. We're not gonna cheat,
是的，我们不会作弊

248
00:13:24,892 --> 00:13:25,948
we're gonna build on top of empty.
我们要建立在零基础之上

249
00:13:25,948 --> 00:13:27,340
So we've seen a console app,
所以我们写了一个控制台应用

250
00:13:27,340 --> 00:13:29,020
we've seen an app that does a single string,
我们已经写了一个应用可以返回单个字符串

251
00:13:29,020 --> 00:13:30,575
next section we'll do pages.
下一节我们将会制做页面

252
00:13:30,595 --> 00:13:31,555
Yes we will.
是的，我们会的！敬请期待

